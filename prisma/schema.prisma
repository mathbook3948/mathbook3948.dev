// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Admin {
  admin_idx Int    @id @default(autoincrement())
  id        String @db.VarChar(255)
  name      String @db.VarChar(255)
  password  String @db.VarChar(255)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  isDeleted Boolean   @default(false) @map("is_deleted")

  @@map("t_admin")
}

model Category {
  category_idx Int     @id @default(autoincrement())
  name         String  @db.VarChar()
  sortOrder    Int     @default(0) @map("sort_order")
  isPublic     Boolean @default(true)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  isDeleted Boolean   @default(false) @map("is_deleted")

  posts Post[]

  @@map("t_category")
}

model Post {
  post_idx     Int    @id @default(autoincrement())
  category_idx Int
  title        String @db.VarChar()
  content      String @db.VarChar()
  views        Int    @default(0)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  isDeleted Boolean   @default(false) @map("is_deleted")

  category Category @relation(fields: [category_idx], references: [category_idx])

  @@map("t_post")
}

model Config {
  key   String @id @db.VarChar()
  value String @db.VarChar()

  @@map("t_config")
}
